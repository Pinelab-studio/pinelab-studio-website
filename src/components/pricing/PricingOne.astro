---
const pricingPlans = [
  {
    name: "Vanilla setup",
    price: "8.000",
    per: "One time",
    description:
      "We will setup a vanilla Vendure on Google Cloud, including a custom storefront. Performant and highly scalable.",
    cardBgClass: "bg-white",
    descriptionColor: "text-slate-500",
    buttonClass: "bg-blue-100 hover:bg-blue-50 text-blue-600",
    features: [],
    unavailableFeatures: [],
  },
  {
    name: "Hosting",
    price: "200",
    per: "Month",
    description: "This is the estimated hosting cost for an online store with a revenue of €30.000/month",
    cardBgClass: "bg-white",
    descriptionColor: "text-slate-500",
    buttonClass: "bg-blue-500 hover:bg-blue-600 text-white",
    features: [    ],
    unavailableFeatures: [],
  },
  {
    name: "Continuous improvement",
    price: "120",
    per: "Hour",
    description:
      `We will help you improve your store on a regular basis. <br/> Above rate is for senior developers, for junior developers we charge €60/hour.`,
    cardBgClass: "bg-white",
    descriptionColor: "text-slate-500",
    buttonClass: "bg-blue-100 hover:bg-blue-50 text-blue-600",
    features: [],
    unavailableFeatures: [],
  },
];
---

<section x-data="{annual: false}" id="pricing">
  <div class="mx-auto max-w-7xl lg:px-16 md:px-12 px-8 xl:px-24 pb-12 pt-24">
    <div class="text-center">
      <span class="text-sm uppercase font-medium tracking-wide text-blue-600"
        >pricing</span
      >
      <h2
        class="text-purple-900 font-semibold tracking-tight lg:text-4xl mt-6 text-3xl text-balance md:text-balance md:w-1/2 mx-auto"
      >
        An indication of our pricing
      </h2>
      <p class="text-slate-500 mt-5 md:text-balance md:w-1/2 mx-auto">
        Prices below are just an indication. We work on hourly basis and can give you a rough estimate before we
        start working together.
      </p>
    </div>
    <div class="mt-16 grid md:grid-cols-2 sm:mx-auto lg:grid-cols-3 gap-12">
      {
        pricingPlans.map((plan) => (
          <section>
            <div
              class={` ${plan.cardBgClass}  flex flex-col  justify-between w-full  `}
            >
              <div>
                <div class="space-y-4 h-48">
                  <div class="flex gap-1 items-end ">
                    <p class={` text-purple-900`}>
                      <span class="text-5xl font-light tracking-tight    ">
                        <span>€{plan.price}</span>
                      </span>
                      /
                    </p>

                    <span
                      class={`text-sm font-medium block ${plan.descriptionColor}`}
                    >
                      {plan.per}
                    </span>
                  </div>
                  <p class={`text-lg   text-purple-900`}>{plan.name}</p>
                  <p class={`text-sm lg:text-pretty ${plan.descriptionColor}`} set:html={plan.description}>
                  </p>
                </div>
              </div>
              <div class="flex mt-6">
                <a
                  type="button"
                  href="/contact/"
                  title={plan.name}
                  aria-label="get started"
                  class={`inline-flex items-center justify-center px-6 py-3.5 rounded-full w-full font-medium ${plan.buttonClass}`}
                >
                  Contact us
                </a>
              </div>
              <ul
                class={`flex flex-col order-last mt-8 text-sm ${plan.descriptionColor} gap-y-3`}
              >
                {plan.features.map((feature) => (
                  <li class="inline-flex items-center gap-2">
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      class="icon icon-tabler icon-tabler-circle-check"
                      width="20"
                      height="20"
                      viewBox="0 0 24 24"
                      stroke-width="2"
                      stroke="currentColor"
                      fill="none"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                    >
                      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                      <path d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
                      <path d="M9 12l2 2l4 -4" />
                    </svg>
                    {feature}
                  </li>
                ))}
                {plan.unavailableFeatures.map((feature) => (
                  <li
                    class={`inline-flex items-center gap-2 ${plan.descriptionColor} line-through opacity-50`}
                  >
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="20"
                      height="20"
                      viewBox="0 0 24 24"
                      fill="none"
                      stroke="currentColor"
                      stroke-width="2"
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      class="icon icon-tabler icons-tabler-outline icon-tabler-xbox-x"
                    >
                      <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                      <path d="M12 21a9 9 0 0 0 9 -9a9 9 0 0 0 -9 -9a9 9 0 0 0 -9 9a9 9 0 0 0 9 9z" />
                      <path d="M9 8l6 8" />
                      <path d="M15 8l-6 8" />
                    </svg>
                    {feature}
                  </li>
                ))}
              </ul>
            </div>
          </section>
        ))
      }
    </div>
  </div>
</section>
